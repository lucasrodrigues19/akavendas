{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp-spring-react\\\\workspace\\\\frontend\\\\src\\\\components\\\\BarChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { round } from 'utils/formarter';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`).then(_response => {\n      const data = _response.data;\n      const myLabels = data.map(x => x.sallerName);\n      const mySeries = data.map(x => round(100 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"%success\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  }; // const mockData = {\n  //     labels:{\n  //         categories: ['Anakin','Barry Allen','Kal-El','Logan','Padmé']\n  //     },\n  //     series:[\n  //         {\n  //             name: \"% Sucesso\",\n  //             data:[43.3,67.1,70.1,80.1,90]\n  //         }\n  //     ]\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels,\n      colors: [\"#7952b3\"]\n    } //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\n    ,\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 8\n  }, this) //retorna o componente do apexcharts que instalei, passo os dados como parametro\n  ;\n};\n\n_s(BarChart, \"3jZYqMTeDoWL2KH9hC1azU662ZU=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["D:/bootcamp-spring-react/workspace/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","_response","myLabels","map","x","sallerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","xaxis","colors"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAGA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAWA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA0BN,QAAQ,CAAY;AAChDO,IAAAA,MAAM,EAAC;AACHC,MAAAA,UAAU,EAAE;AADT,KADyC;AAIhDC,IAAAA,MAAM,EAAC,CAEH;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAC;AAFT,KAFG;AAJyC,GAAZ,CAAxC;AAYAZ,EAAAA,SAAS,CAAC,MAAI;AACVD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,0BAAtB,EACCU,IADD,CACOC,SAAD,IAAe;AACjB,YAAMH,IAAI,GAAGG,SAAS,CAACH,IAAvB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAAC,MAAMe,CAAC,CAACG,KAAR,GAAgBH,CAAC,CAACI,OAAnB,EAA2B,CAA3B,CAAnB,CAAjB;AACAf,MAAAA,YAAY,CAAC;AACTC,QAAAA,MAAM,EAAC;AACHC,UAAAA,UAAU,EAAEO;AADT,SADE;AAITN,QAAAA,MAAM,EAAC,CAEH;AACIC,UAAAA,IAAI,EAAE,UADV;AAEIC,UAAAA,IAAI,EAACQ;AAFT,SAFG;AAJE,OAAD,CAAZ;AAYH,KAjBD;AAkBH,GAnBQ,EAmBP,EAnBO,CAAT;AAoBA,QAAMG,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAC;AACRC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADG;AADA,GAAhB,CAjCkB,CAwClB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACG,QAAC,KAAD;AACK,IAAA,OAAO,EAAE,EAAC,GAAGH,OAAJ;AAAYI,MAAAA,KAAK,EAAErB,SAAS,CAACE,MAA7B;AAAoCoB,MAAAA,MAAM,EAAC,CAAC,SAAD;AAA3C,KADd,CACuE;AADvE;AAEK,IAAA,MAAM,EAAEtB,SAAS,CAACI,MAFvB;AAGK,IAAA,IAAI,EAAC,KAHV;AAIK,IAAA,MAAM,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADH,CAOM;AAPN;AASH,CA7DD;;GAAML,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { SaleSuccess } from 'types/sale';\r\nimport { ModuleKind } from 'typescript';\r\nimport { round } from 'utils/formarter';\r\nimport { BASE_URL } from 'utils/requests';\r\ntype SeriesData = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype ChartData = {\r\n    labels:{\r\n        categories: string[];\r\n    };\r\n    series: SeriesData[]\r\n}\r\nconst BarChart = () =>{\r\n    const [chartData,setChartData]= useState<ChartData>({\r\n        labels:{\r\n            categories: []\r\n        },\r\n        series:[\r\n\r\n            {\r\n                name: \"\",\r\n                data:[]\r\n            }\r\n        ]\r\n    })\r\n    useEffect(()=>{\r\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\r\n        .then((_response) => {\r\n            const data = _response.data as SaleSuccess[]; \r\n            const myLabels = data.map(x => x.sallerName);\r\n            const mySeries = data.map(x => round(100 * x.deals / x.visited,1))\r\n            setChartData({\r\n                labels:{\r\n                    categories: myLabels\r\n                },\r\n                series:[\r\n        \r\n                    {\r\n                        name: \"%success\",\r\n                        data:mySeries\r\n                    }\r\n                ]\r\n            });\r\n        })\r\n    },[])\r\n    const options = {\r\n        plotOptions:{\r\n            bar: {\r\n                horizontal: true\r\n            }\r\n        },\r\n    };\r\n    // const mockData = {\r\n    //     labels:{\r\n    //         categories: ['Anakin','Barry Allen','Kal-El','Logan','Padmé']\r\n    //     },\r\n    //     series:[\r\n\r\n    //         {\r\n    //             name: \"% Sucesso\",\r\n    //             data:[43.3,67.1,70.1,80.1,90]\r\n    //         }\r\n    //     ]\r\n    // }\r\n    return(\r\n       <Chart\r\n            options={{...options,xaxis: chartData.labels,colors:[\"#7952b3\"]}} //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"240\" \r\n       \r\n       /> //retorna o componente do apexcharts que instalei, passo os dados como parametro\r\n    );\r\n}\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}