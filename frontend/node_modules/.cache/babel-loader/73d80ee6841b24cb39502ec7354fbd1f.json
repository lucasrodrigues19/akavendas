{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp-spring-react\\\\workspace\\\\frontend\\\\src\\\\components\\\\dataTable\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"utils/requests\";\nimport { formatLocalDate } from \"utils/formarter\";\nimport Pagination from \"components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataTable = () => {\n  _s();\n\n  var _page$content;\n\n  const [activePage, setActivePage] = useState(0);\n  const [page, setPage] = useState({\n    first: true,\n    number: 0,\n    totalElements: 0,\n    totalPages: 0,\n    last: true\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales?page=${activePage}&size=20&sort=date,desc`).then(_response => {\n      setPage(_response.data);\n    });\n  }, [activePage]);\n  /*Sempre que o activePage mudar vou fazer um get, ou seja vou ficar observando */\n\n  const changePage = index => {\n    setActivePage(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      onPageChange: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vendedor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Clientes visitados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Neg\\xF3cios fechados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (_page$content = page.content) === null || _page$content === void 0 ? void 0 : _page$content.map(obj => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatLocalDate(obj.date, \"dd/MM/yyyy\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: obj.sellerDTOAK.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: obj.visited\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: obj.deals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: obj.amount.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, obj.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataTable, \"TVynCEctoXUDu5uk6AkF5xG0yrA=\");\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["D:/bootcamp-spring-react/workspace/frontend/src/components/dataTable/index.tsx"],"names":["useEffect","useState","axios","BASE_URL","formatLocalDate","Pagination","DataTable","activePage","setActivePage","page","setPage","first","number","totalElements","totalPages","last","get","then","_response","data","changePage","index","content","map","obj","date","sellerDTOAK","name","visited","deals","amount","toFixed","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;;AAEA,MAAMC,SAAS,GAAI,MAAK;AAAA;;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACQ,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAW;AACtCU,IAAAA,KAAK,EAAC,IADgC;AAEtCC,IAAAA,MAAM,EAAC,CAF+B;AAGtCC,IAAAA,aAAa,EAAC,CAHwB;AAItCC,IAAAA,UAAU,EAAC,CAJ2B;AAKtCC,IAAAA,IAAI,EAAC;AALiC,GAAX,CAA/B;AAQAf,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEb,QAAS,eAAcI,UAAW,yBAA/C,EACCU,IADD,CACMC,SAAS,IAAG;AACdR,MAAAA,OAAO,CAACQ,SAAS,CAACC,IAAX,CAAP;AACH,KAHD;AAIH,GALQ,EAKP,CAACZ,UAAD,CALO,CAAT;AAKgB;;AAChB,QAAMa,UAAU,GAAIC,KAAD,IAAkB;AACjCb,IAAAA,aAAa,CAACa,KAAD,CAAb;AACH,GAFD;;AAGA,sBACQ;AAAA,4BAEI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,IAAlB;AAAwB,MAAA,YAAY,EAAEW;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,oBAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,8BAAjB;AAAA,gCACI;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,qCAEIX,IAAI,CAACa,OAFT,kDAEI,cAAcC,GAAd,CAAkBC,GAAG,iBACjB;AAAA,oCACA;AAAA,wBAAKpB,eAAe,CAACoB,GAAG,CAACC,IAAL,EAAU,YAAV;AAApB;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKD,GAAG,CAACE,WAAJ,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKH,GAAG,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,wBAAKJ,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA,wBAAKL,GAAG,CAACM,MAAJ,CAAWC,OAAX,CAAmB,CAAnB;AAAL;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA,aAASP,GAAG,CAACQ,EAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADR;AA+BH,CAlDD;;GAAM1B,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { SalePage } from \"types/sale\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"utils/requests\";\r\nimport { formatLocalDate } from \"utils/formarter\";\r\nimport Pagination from \"components/Pagination\";\r\n\r\nconst DataTable  = () =>{\r\n    const [activePage,setActivePage] = useState(0)\r\n    const [page,setPage] = useState<SalePage>({\r\n        first:true,\r\n        number:0,\r\n        totalElements:0,\r\n        totalPages:0,\r\n        last:true\r\n\r\n    })\r\n    useEffect(()=>{\r\n        axios.get(`${BASE_URL}/sales?page=${activePage}&size=20&sort=date,desc`)\r\n        .then(_response =>{\r\n            setPage(_response.data)\r\n        })\r\n    },[activePage]) /*Sempre que o activePage mudar vou fazer um get, ou seja vou ficar observando */\r\n    const changePage = (index:number) => {\r\n        setActivePage(index)\r\n    } \r\n    return (\r\n            <>\r\n                {/* /*Passo o estado do meu componente que é o page,para o type page do Pagination, no pagination eu posso acessar o page que foi passado*/ }\r\n                <Pagination page={page} onPageChange={changePage}/> {/** Quando changePage vai ser chamado la no componente pagination, assin alterando o valor de activePage, ou seja, aqui será o observer*/}\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped table-sm\">\r\n                        <thead>\r\n                            <tr className=\"table-primary\">\r\n                                <th>Data</th>\r\n                                <th>Vendedor</th>\r\n                                <th>Clientes visitados</th>\r\n                                <th>Negócios fechados</th>\r\n                                <th>Valor</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            page.content?.map(obj => (\r\n                                <tr key={obj.id}>\r\n                                <td>{formatLocalDate(obj.date,\"dd/MM/yyyy\")}</td>\r\n                                <td>{obj.sellerDTOAK.name}</td>\r\n                                <td>{obj.visited}</td>\r\n                                <td>{obj.deals}</td>\r\n                                <td>{obj.amount.toFixed(2)}</td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n           </>\r\n    );\r\n}\r\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}