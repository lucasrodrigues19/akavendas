[{"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\index.tsx":"1","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\App.tsx":"2","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\navBar\\index.tsx":"3","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\footer\\index.tsx":"4","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\dataTable\\index.tsx":"5","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\BarChart\\index.tsx":"6","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\DonutChart\\index.tsx":"7"},{"size":330,"mtime":1621386009260,"results":"8","hashOfConfig":"9"},{"size":1120,"mtime":1621649825561,"results":"10","hashOfConfig":"9"},{"size":508,"mtime":1621307098020,"results":"11","hashOfConfig":"9"},{"size":2454,"mtime":1621649669484,"results":"12","hashOfConfig":"9"},{"size":1845,"mtime":1621384657740,"results":"13","hashOfConfig":"9"},{"size":972,"mtime":1621647724214,"results":"14","hashOfConfig":"9"},{"size":840,"mtime":1621649702050,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1u1rjkk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\index.tsx",[],["33","34"],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\App.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\navBar\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\footer\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\dataTable\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\BarChart\\index.tsx",["35"],"import Chart from 'react-apexcharts';\r\nimport { ModuleKind } from 'typescript';\r\nconst BarChart = () =>{\r\n    const options = {\r\n        plotOptions:{\r\n            bar: {\r\n                horizontal: true\r\n            }\r\n        },\r\n    };\r\n    const mockData = {\r\n        labels:{\r\n            categories: ['Anakin','Barry Allen','Kal-El','Logan','Padmé']\r\n        },\r\n        series:[\r\n\r\n            {\r\n                name: \"% Sucesso\",\r\n                data:[43.3,67.1,70.1,80.1,90]\r\n            }\r\n        ]\r\n    }\r\n    return(\r\n       <Chart\r\n            options={{...options,xaxis: mockData.labels,colors:[\"#7952b3\"]}} //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\r\n            series={mockData.series}\r\n            type=\"bar\"\r\n            height=\"240\" \r\n       \r\n       /> //retorna o componente do apexcharts que instalei, passo os dados como parametro\r\n    );\r\n}\r\nexport default BarChart;","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\DonutChart\\index.tsx",["36"],"import Chart from 'react-apexcharts';\r\nimport { ModuleKind } from 'typescript';\r\nconst DonutChart = () =>{\r\n    const options = {\r\n        legend:{\r\n            show:true\r\n        }\r\n    };\r\n    const mockData = {\r\n        series:[477138,799928,444867,220426,473088],\r\n        labels: ['Anakin','Barry Alen', 'Karl-el','Logan','Padmé']\r\n    }\r\n    return(\r\n       <Chart\r\n            options={{...options,labels: mockData.labels,colors:[\"#A03EAF\",\"#78058A\",\"#6B3473\",\"#886B8D\",\"#4E015A\"]}} //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\r\n            series={mockData.series}\r\n            type=\"donut\"\r\n            height=\"240\" \r\n       \r\n       /> //retorna o componente do apexcharts que instalei, passo os dados como parametro\r\n    );\r\n}\r\nexport default DonutChart;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'ModuleKind' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]