[{"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\index.tsx":"1","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\App.tsx":"2","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\navBar\\index.tsx":"3","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\footer\\index.tsx":"4","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\dataTable\\index.tsx":"5","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\BarChart\\index.tsx":"6","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\DonutChart\\index.tsx":"7","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\Routes.tsx":"8","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\pages\\dashboard\\index.tsx":"9","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\pages\\home\\index.tsx":"10","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\utils\\requests.ts":"11","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\utils\\formarter.ts":"12","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\Pagination\\index.tsx":"13"},{"size":344,"mtime":1624109300152,"results":"14","hashOfConfig":"15"},{"size":108,"mtime":1624406236156,"results":"16","hashOfConfig":"15"},{"size":622,"mtime":1624406987946,"results":"17","hashOfConfig":"15"},{"size":2454,"mtime":1624405920724,"results":"18","hashOfConfig":"15"},{"size":2547,"mtime":1625312159750,"results":"19","hashOfConfig":"15"},{"size":2261,"mtime":1625307653634,"results":"20","hashOfConfig":"15"},{"size":1282,"mtime":1624720280581,"results":"21","hashOfConfig":"15"},{"size":520,"mtime":1624406223766,"results":"22","hashOfConfig":"15"},{"size":1167,"mtime":1624406081791,"results":"23","hashOfConfig":"15"},{"size":888,"mtime":1624717431947,"results":"24","hashOfConfig":"15"},{"size":47,"mtime":1624569439620,"results":"25","hashOfConfig":"15"},{"size":439,"mtime":1625308574088,"results":"26","hashOfConfig":"15"},{"size":1190,"mtime":1625312265344,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1u1rjkk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\index.tsx",[],["57","58"],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\App.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\navBar\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\footer\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\dataTable\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\BarChart\\index.tsx",["59"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { SaleSuccess } from 'types/sale';\r\nimport { ModuleKind } from 'typescript';\r\nimport { round } from 'utils/formarter';\r\nimport { BASE_URL } from 'utils/requests';\r\ntype SeriesData = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype ChartData = {\r\n    labels:{\r\n        categories: string[];\r\n    };\r\n    series: SeriesData[]\r\n}\r\nconst BarChart = () =>{\r\n    const [chartData,setChartData]= useState<ChartData>({\r\n        labels:{\r\n            categories: []\r\n        },\r\n        series:[\r\n            {\r\n                name: \"\",\r\n                data:[]\r\n            }\r\n        ]\r\n    })\r\n    useEffect(()=>{\r\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\r\n        .then((_response) => {\r\n            const data = _response.data as SaleSuccess[]; \r\n            const myLabels = data.map(x => x.sellerName);\r\n            const mySeries = data.map(x => round(100 * x.deals / x.visited,1))\r\n            setChartData({\r\n                labels:{\r\n                    categories: myLabels\r\n                },\r\n                series:[\r\n        \r\n                    {\r\n                        name: \"%success\",\r\n                        data:mySeries\r\n                    }\r\n                ]\r\n            });\r\n        })\r\n    },[])\r\n    const options = {\r\n        plotOptions:{\r\n            bar: {\r\n                horizontal: true\r\n            }\r\n        },\r\n    };\r\n    // const mockData = {\r\n    //     labels:{\r\n    //         categories: ['Anakin','Barry Allen','Kal-El','Logan','Padmé']\r\n    //     },\r\n    //     series:[\r\n\r\n    //         {\r\n    //             name: \"% Sucesso\",\r\n    //             data:[43.3,67.1,70.1,80.1,90]\r\n    //         }\r\n    //     ]\r\n    // }\r\n    return(\r\n       <Chart\r\n            options={{...options,xaxis: chartData.labels,colors:[\"#7952b3\"]}} //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"240\" \r\n       \r\n       /> //retorna o componente do apexcharts que instalei, passo os dados como parametro\r\n    );\r\n}\r\nexport default BarChart;","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\DonutChart\\index.tsx",["60"],"import Chart from 'react-apexcharts';\r\nimport { ModuleKind } from 'typescript';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios'; \r\nimport { BASE_URL } from 'utils/requests';\r\nimport { SaleSum } from 'types/sale';\r\n\r\ntype ChartData = {\r\n    labels:string[];\r\n    series:number[];\r\n}\r\n\r\nconst DonutChart = () =>{\r\n    const [chartData, setChartData] = useState<ChartData>({labels:[],series:[]})\r\n    useEffect(()=>{\r\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\r\n        .then((_response) => {\r\n            const data = _response.data as SaleSum[]; \r\n            const myLabels = data.map(x => x.sellerName);\r\n            const mySeries = data.map(x => x.sum)\r\n            setChartData({labels:myLabels, series: mySeries});\r\n        })\r\n    },[])\r\n    const options = {\r\n        legend:{\r\n            show:true\r\n        }\r\n    };\r\n    return(\r\n       <Chart\r\n            options={{...options,labels: chartData.labels,colors:[\"#A03EAF\",\"#78058A\",\"#6B3473\",\"#886B8D\",\"#4E015A\"]}} //ela vai ser incorporada na definição do tsx, to dizendo aproveitar o options e vou passar mais argumentos para ele\r\n            series={chartData.series}\r\n            type=\"donut\"\r\n            height=\"240\" \r\n       \r\n       /> \r\n    );\r\n}\r\nexport default DonutChart;","D:\\bootcamp-spring-react\\workspace\\frontend\\src\\Routes.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\pages\\dashboard\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\pages\\home\\index.tsx",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\utils\\requests.ts",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\utils\\formarter.ts",[],"D:\\bootcamp-spring-react\\workspace\\frontend\\src\\components\\Pagination\\index.tsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":20},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'ModuleKind' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]