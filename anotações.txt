
AULA 1
	1 - npm install --global yarn -> gerenciador de dependencias e build
	2 - npx create-react-app frontend --template typescript-> criando uma estrutura do app react com o nome frontend e linguagem basica typescript
	3 - excluir a pasta .git do projeto fontend
	4 - ver se está funcionando: dentro da pasta frontend, comando yarn start, para parar CTRL+C
	OBSERVAÇÕES
		caso der erro no maven, update project, ou apagar a pasta.m2(na pasta .m2 do seu usuário apagar a pasta .m2)
		erro do de jre, projeto/properties/java build path/libraries/jre system libraires/edit/
PAREI EM 37:35 Limpar o projeto js
	5 - Limpando o projeto react:
		Na pasta public deixar so index.html e favicon.ico, OBS: a div root é onde a aplicação vai rodar
		Em src, deixar apenas os arquivos: App.tsx, index.tsx, react-app-env.d.ts, setupTests.ts
	6 - Mexer no arquivo tsconfig.json, OBS é um arquivo que tem varias configurações para orientar como a com-
	   pilação do type-script vai acontecer
		No começo na chave "compilerOptions:{", inserir: baseUrl: ".src/", isso é para orientar o typescript
		que os arquivos que irei importar ta apartir de .src
	7 - adicionar Arquivo /public/_redirects: é necessario para que rode bem no Netflix, no conteudo colocar: 
		/index.html 200
	8 - limpar os imports que deletei em App.tsx
	
	9 - Em app.tsx, ex:
				function App() {
  						return (
     							 <div>
     							  <h1>Olá Mundo</h1>
     							 </div>
  							);
						}
	Minha aplicação vai retornar uma </div>
	10 - limpar o arquivo index.tsx
PAREI EM 48:50 Adicionando o bootstrap
	11 - site getbootstrap.com, um site que ja tem uma estrutura pronta para designe
	12 - no terminal do frontend, roda o comando yarn add bootstrap(Qualquer dependencia que faltar, tipo jquery, adicionar)
	13 - Além de instalar no yarn, no index.tsx, adicionar o import 'bootstrap/dist/css/bootstrap.css'
	14 - adicionar o assets(recursos) src/assets/css
	15 - adicionar estilos
	:root { //adicionando variaveis
    		--color-primary: #FF8400;
	}
	16 - no index, importar o nosso arquivo do assets
	17 - adicionando componentes
PAREI EM 01:01:29
	18 - A base do ract é componente, componente é uma função js
	     um exemplo de componente é do arquivo App.tsx
	     tem uma função App, e o comando: export default App, diz que App é visivel para outros arquivos
	     O index.html é alimentado pelo index.tsx, que chama a função App e alimenta a tag root, lembrando que App vai ser 
	    um componente setado na div root no index.html
	19: Exemplos de codigo html, pegar no site getBootstrap
	20: ex de importar uma imagem para usar no html codigo(<img src={imgLogoAka}) :import imgLogoAka from '../../assets/img/aka-logotipo.jpeg';
	Em uma função que retorna um componente, pode apenas retornar um elemento,quando tiver dois elementos usar desse jeito:
		 <>
      			<NavBar />
      				<div>
       				 <h1 className="text-primary">AKA Vendas</h1>

     				 </div>
   		 </>
PAREI EM 01:14:00
